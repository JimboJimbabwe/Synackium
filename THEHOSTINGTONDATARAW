{
  "Ports": [
    {
      "Port": 80,
      "Protocol": "HTTP",
      "PotentialServices": [
        {
          "Service": "Apache HTTP Server",
          "DefaultEndpoints": ["/"],
          "CommonEndpoints": [
            "/server-status",
            "/phpinfo.php",
            "/cgi-bin/",
            "/icons/",
            "/wp-admin/",
            "/admin/",
            "/backup/",
            "/.git/",
            "/api/",
            "/wp-content/",
            "/wp-includes/",
            "/administrator/",
            "/joomla/administrator/",
            "/drupal/admin/",
            "/phpmyadmin/",
            "/mysql/",
            "/cms/",
            "/blog/",
            "/forum/",
            "/install/",
            "/temp/",
            "/test/",
            "/tmp/",
            "/php/",
            "/_admin/",
            "/admin_area/",
            "/administrator/",
            "/moderator/",
            "/webadmin/",
            "/adminarea/",
            "/bb-admin/",
            "/adminLogin/",
            "/admin_login/",
            "/panel-administracion/",
            "/instadmin/",
            "/.htaccess.bak",
            "/wp-config.php.bak",
            "/config.php.bak",
            "/.env.local",
            "/.env.backup",
            "/.env.dev",
            "/sitemap.xml",
            "/robots.txt",
            "/composer.json",
            "/package.json",
            "/phpunit.xml",
            "/web.config",
            "/.well-known/"
          ],
          "UndesirableEndpoints": [
            "/server-status",
            "/phpinfo.php",
            "/.htaccess",
            "/.htpasswd",
            "/.env",
            "/wp-config.php",
            "/backup.sql",
            "/.git/config",
            "/README.md",
            "/config.inc.php",
            "/.git/HEAD",
            "/.svn/entries",
            "/.DS_Store",
            "/error_log",
            "/error.log",
            "/debug.log",
            "/access.log",
            "/backup/",
            "/.ssh/",
            "/.bash_history",
            "/.mysql_history",
            "/id_rsa",
            "/id_rsa.pub",
            "/.aws/credentials",
            "/.dockercfg",
            "/Dockerfile",
            "/docker-compose.yml",
            "/.gitlab-ci.yml",
            "/.travis.yml",
            "/jenkins.xml",
            "/composer.lock",
            "/yarn.lock",
            "/package-lock.json",
            "/.phpunit.result.cache",
            "/phpunit.xml",
            "/karma.conf.js",
            "/webpack.config.js",
            "/.eslintrc",
            "/.prettierrc",
            "/setup.cfg",
            "/requirements.txt",
            "/Gemfile",
            "/Gemfile.lock",
            "/config.ru",
            "/Rakefile",
            "/Procfile",
            "/.npmrc",
            "/.yarnrc",
            "/.babelrc"
          ]
        },
        {
          "Service": "Nginx",
          "DefaultEndpoints": ["/"],
          "CommonEndpoints": [
            "/nginx-status",
            "/static/",
            "/media/",
            "/uploads/",
            "/assets/",
            "/images/",
            "/img/",
            "/css/",
            "/js/",
            "/fonts/",
            "/dist/",
            "/build/",
            "/api/",
            "/api/v1/",
            "/api/v2/",
            "/health",
            "/healthcheck",
            "/status",
            "/ping",
            "/metrics",
            "/stub_status",
            "/nginx_status",
            "/.well-known/acme-challenge/",
            "/proxy/",
            "/redirect/",
            "/download/",
            "/upload/",
            "/admin/",
            "/administrator/",
            "/backend/",
            "/cms/",
            "/dashboard/"
          ],
          "UndesirableEndpoints": [
            "/nginx.conf",
            "/.git/",
            "/.env",
            "/config/",
            "/logs/",
            "/log/",
            "/temp/",
            "/tmp/",
            "/.htpasswd",
            "/.user.ini",
            "/wp-config.php",
            "/config.php",
            "/configuration.php",
            "/conf/",
            "/admin/conf/",
            "/system/conf/",
            "/.docker/",
            "/.circleci/",
            "/.github/",
            "/deploy/",
            "/deployment/",
            "/backup/",
            "/bak/",
            "/old/",
            "/new/",
            "/dev/",
            "/stage/",
            "/stg/",
            "/prod/",
            "/test/",
            "/demo/",
            "/.svn/",
            "/.git/",
            "/.hg/",
            "/.gitlab/",
            "/.idea/",
            "/.vscode/",
            "/node_modules/",
            "/vendor/",
            "/.env.local",
            "/.env.development",
            "/.env.test",
            "/.env.production",
            "/supervisord.conf",
            "/Dockerfile",
            "/docker-compose.yml"
          ]
        }
      ]
    },
    {
      "Port": 443,
      "Protocol": "HTTPS",
      "PotentialServices": [
        {
          "Service": "Apache HTTP Server (SSL)",
          "DefaultEndpoints": ["/"],
          "CommonEndpoints": [
            "/secure/",
            "/ssl/",
            "/https/",
            "/private/",
            "/admin/",
            "/administrator/",
            "/backend/",
            "/portal/",
            "/webmail/",
            "/cpanel/",
            "/whm/",
            "/webadmin/",
            "/adminer/",
            "/phpmyadmin/",
            "/mysql/",
            "/database/",
            "/db/",
            "/api/",
            "/api/v1/",
            "/api/v2/",
            "/rest/",
            "/graphql/",
            "/gql/",
            "/soap/",
            "/ws/",
            "/wss/",
            "/auth/",
            "/oauth/",
            "/oauth2/",
            "/sso/",
            "/login/",
            "/logout/",
            "/signup/",
            "/register/",
            "/account/",
            "/profile/",
            "/dashboard/",
            "/console/",
            "/wp-admin/",
            "/wp-login/",
            "/.well-known/acme-challenge/"
          ],
          "UndesirableEndpoints": [
            "/.well-known/acme-challenge/",
            "/certificate/",
            "/certificates/",
            "/ssl/",
            "/private/",
            "/.ssh/",
            "/.aws/",
            "/.gnupg/",
            "/id_rsa",
            "/id_ecdsa",
            "/server.key",
            "/server.crt",
            "/ssl.conf",
            "/ssl.key",
            "/ssl.crt",
            "/private.key",
            "/public.key",
            "/key.pem",
            "/cert.pem",
            "/ssl.pem",
            "/.keystore",
            "/.truststore",
            "/known_hosts",
            "/authorized_keys",
            "/jwt/",
            "/token/",
            "/secrets/",
            "/secure_notes/",
            "/backup/",
            "/dump/",
            "/config/",
            "/.env",
            "/.env.prod",
            "/.env.production",
            "/wp-config.php",
            "/config.php",
            "/settings.php",
            "/.htpasswd",
            "/.htaccess",
            "/phpinfo.php",
            "/info.php",
            "/test.php",
            "/database.yml",
            "/credentials.json",
            "/master.key"
          ]
        }
      ]
    },
    {
      "Port": 8080,
      "Protocol": "HTTP Alternative",
      "PotentialServices": [
        {
          "Service": "Tomcat",
          "DefaultEndpoints": ["/"],
          "CommonEndpoints": [
            "/manager/html",
            "/manager/status",
            "/manager/text",
            "/host-manager/html",
            "/examples/",
            "/docs/",
            "/manager/jmxproxy",
            "/sample/",
            "/test/",
            "/demo/",
            "/host-manager/",
            "/admin/",
            "/static/",
            "/resources/",
            "/assets/",
            "/upload/",
            "/logs/",
            "/status",
            "/probe/",
            "/solr/",
            "/jenkins/",
            "/nexus/",
            "/jira/",
            "/confluence/",
            "/bamboo/",
            "/artifactory/",
            "/spring/",
            "/api/",
            "/swagger/",
            "/swagger-ui.html",
            "/v2/api-docs",
            "/v3/api-docs",
            "/actuator",
            "/actuator/health",
            "/actuator/info",
            "/actuator/metrics"
          ],
          "UndesirableEndpoints": [
            "/manager/html",
            "/manager/text",
            "/host-manager/html",
            "/manager/status",
            "/manager/jmxproxy",
            "/examples/",
            "/docs/",
            "/sample/",
            "/test/",
            "/conf/",
            "/config/",
            "/logs/",
            "/temp/",
            "/work/",
            "/backup/",
            "/.git/",
            "/.svn/",
            "/WEB-INF/",
            "/META-INF/",
            "/manager/status",
            "/probe/",
            "/jolokia/",
            "/jmx-console/",
            "/web-console/",
            "/admin-console/",
            "/axis2-admin/",
            "/axis2/",
            "/webdav/",
            "/ucwa/",
            "/autodiscover/",
            "/exchange/",
            "/servlet/default/",
            "/servlet/org.apache.catalina.manager",
            "/catalina/manager",
            "/jk-status",
            "/jk-manager",
            "/status",
            "/server-status",
            "/server-info",
            "*.jsp",
            "*.jspx",
            "*.jsw",
            "*.jsv",
            "*.jspf",
            "/web.xml",
            "/context.xml",
            "/server.xml",
            "/tomcat-users.xml",
            "/catalina.properties",
            "/logging.properties",
            "/manager/WEB-INF/web.xml"
          ]
        },
        {
          "Service": "Jenkins",
          "DefaultEndpoints": ["/"],
          "CommonEndpoints": [
            "/api/",
            "/apis/",
            "/swagger/",
            "/job/",
            "/queue/",
            "/computer/",
            "/asynchPeople/",
            "/securityRealm/",
            "/view/",
            "/user/",
            "/userContent/",
            "/plugin/",
            "/configure",
            "/manage",
            "/log/",
            "/systemInfo",
            "/about/",
            "/builds",
            "/cli",
            "/credentials/",
            "/workspace/",
            "/ws/",
            "/script",
            "/scriptText",
            "/pluginManager/",
            "/restart",
            "/reload",
            "/safeRestart",
            "/exit",
            "/quietDown",
            "/cancelQuietDown"
          ],
          "UndesirableEndpoints": [
            "/script",
            "/scriptText",
            "/cli",
            "/jenkins.war",
            "/jenkins.xml",
            "/config.xml",
            "/credentials.xml",
            "/identity.key.enc",
            "/secret.key",
            "/secret.key.not-so-secret",
            "/secrets/",
            "/userContent/",
            "/.ssh/",
            "/workspace/",
            "/jobs/*/config.xml",
            "/users/*/config.xml",
            "/credentials/store/system/domain/_/",
            "/pluginManager/",
            "/systemInfo",
            "/log/",
            "/logs/",
            "/asynchPeople/",
            "/securityRealm/",
            "/quietDown",
            "/exit",
            "/restart",
            "/reload",
            "/safeRestart",
            "/cancelQuietDown",
            "/configureSecurity/",
            "/administrativeMonitor/",
            "/installStatistics",
            "/adjuncts/",
            "/hooklog/",
            "/deploy/",
            "/view/all/builds",
            "/view/all/newJob",
            "/manage",
            "/manage/configure",
            "/manage/script",
            "/tcp/",
            "/udp/",
            "/cli/"
          ]
        }
      ]
    },
    {
      "Port": 1433,
      "Protocol": "MSSQL",
      "PotentialServices": [
        {
          "Service": "Microsoft SQL Server",
          "DefaultEndpoints": ["/"],
          "CommonEndpoints": [
            "/master",
            "/tempdb",
            "/model",
            "/msdb",
            "/SQLEXPRESS",
            "/MSSQLSERVER",
            "/DatabaseEngine",
            "/ReportServer",
            "/Reports",
            "/SSRS",
            "/SSAS",
            "/Analysis",
            "/Data",
            "/Backup",
            "/Log",
            "/System"
          ],
          "UndesirableEndpoints": [
            "/master",
            "/msdb",
            "/model",
            "/tempdb",
            "/*.mdf",
            "/*.ldf",
            "/*.bak",
            "/*.trn",
            "/ERRORLOG",
            "/master.sys.databases",
            "/master.sys.server_principals",
            "/master.sys.sql_logins",
            "/master.sys.server_role_members",
            "/master.sys.configurations",
            "/master.sys.messages",
            "/sp_configure",
            "/xp_cmdshell",
            "/xp_regread",
            "/linked_servers",
            "/backup_devices",
            "/credential_identity",
            "/certificates",
            "/symmetric_keys",
            "/asymmetric_keys",
            "/master_files",
            "/master_key_passwords",
            "/service_master_key"
          ]
        }
      ]
    },
    {
      "Port": 5432,
      "Protocol": "PostgreSQL",
      "PotentialServices": [
        {
          "Service": "PostgreSQL",
          "DefaultEndpoints": ["/"],
          "CommonEndpoints": [
            "/postgres",
            "/template0",
            "/template1",
            "/pg_catalog",
            "/information_schema",
            "/pg_toast",
            "/pg_temp",
            "/pg_toast_temp",
            "/pg_stat_tmp",
            "/performance_schema",
            "/public",
            "/contrib",
            "/dbo",
            "/sys"
          ],
          "Un

// Let's add services that weren't fully covered yet
const additionalServices = {
  "Port": 5432,
  "Protocol": "PostgreSQL",
  "PotentialServices": [{
    "Service": "PostgreSQL",
    "DefaultEndpoints": ["/"],
    "CommonEndpoints": [
      "/postgres",
      "/template0",
      "/template1",
      "/pg_catalog",
      "/information_schema",
      "/pg_toast",
      "/pg_temp",
      "/pg_toast_temp",
      "/pg_stat_tmp",
      "/performance_schema",
      "/public",
      "/contrib",
      "/dbo",
      "/sys",
      "/pg_shadow",
      "/pg_authid",
      "/pg_group",
      "/pg_user",
      "/pg_rules",
      "/pg_views",
      "/pg_tables",
      "/pg_indexes",
      "/pg_stats",
      "/pg_locks",
      "/pg_cursors",
      "/pg_available_extensions",
      "/pg_available_extension_versions",
      "/pg_prepared_statements",
      "/pg_prepared_xacts",
      "/pg_stat_activity",
      "/pg_stat_replication",
      "/pg_stat_ssl",
      "/pg_replication_slots",
      "/pg_stat_database",
      "/pg_stat_user_tables",
      "/pg_statio_user_tables",
      "/pg_stat_user_indexes",
      "/pg_statio_user_indexes"
    ],
    "UndesirableEndpoints": [
      "/postgresql.conf",
      "/pg_hba.conf",
      "/pg_ident.conf",
      "/.pgpass",
      "/postgresql.auto.conf",
      "/recovery.conf",
      "/standby.signal",
      "/postgresql.pid",
      "/postmaster.pid",
      "/postmaster.opts",
      "/pg_log/*",
      "/pg_xlog/*",
      "/pg_wal/*",
      "/pg_dynshmem/*",
      "/pg_notify/*",
      "/pg_replslot/*",
      "/pg_serial/*",
      "/pg_snapshots/*",
      "/pg_stat_tmp/*",
      "/pg_subtrans/*",
      "/pg_tblspc/*",
      "/pg_twophase/*",
      "/*.bak",
      "/*.old",
      "/*.conf.sample",
      "/backup/*",
      "/dump/*",
      "/archive/*",
      "/pg_dump*",
      "/psql_history",
      "/.psql_history",
      "/pg_service.conf",
      "/pgpass",
      "/root/.pgpass",
      "/pg_upgrade_utility.log",
      "/pg_upgrade_server.log",
      "/pg_upgrade_internal.log",
      "/logfile",
      "/global/pg_control",
      "/global/pg_filenode.map",
      "/global/pg_internal.init"
    ]
  }]
};

console.log("New PostgreSQL service configuration:");
console.log(JSON.stringify(additionalServices, null, 2));

// Let's add new services for common ports
const newServices = {
  "Port": 5601,
  "Protocol": "HTTP",
  "PotentialServices": [{
    "Service": "Kibana",
    "DefaultEndpoints": ["/"],
    "CommonEndpoints": [
      "/app/kibana",
      "/app/home",
      "/app/management",
      "/app/dev_tools",
      "/api/status",
      "/api/features",
      "/api/index_patterns",
      "/elasticsearch",
      "/spaces",
      "/saved_objects",
      "/internal",
      "/goto",
      "/login",
      "/logout",
      "/dashboards",
      "/visualize",
      "/discover",
      "/canvas",
      "/maps",
      "/uptime",
      "/apm",
      "/metrics",
      "/logs",
      "/timelion",
      "/graph",
      "/monitoring",
      "/management/kibana",
      "/management/elasticsearch"
    ],
    "UndesirableEndpoints": [
      "/kibana.yml",
      "/.kibana",
      "/config/kibana.yml",
      "/data/",
      "/bin/",
      "/plugins/",
      "/optimize/",
      "/status",
      "/api/console/proxy",
      "/internal/security/login",
      "/internal/security/session",
      "/bootstrap.js",
      "/bundles/",
      "/.node-version",
      "/package.json",
      "/config/",
      "/kibana.keystore",
      "/kibana.logfile",
      "/kibana.pid",
      "/node_modules/",
      "/optimize/.babelcache",
      "/data/sessions/",
      "/data/translations/",
      "/.i18nrc.json",
      "/tsconfig.json",
      "/webpack.config.js",
      "/.npmrc"
    ]
  }]
};

console.log("\nNew Kibana service configuration:");
console.log(JSON.stringify(newServices, null, 2));

// Let's also add a monitoring service configuration
const monitoringService = {
  "Port": 9090,
  "Protocol": "HTTP",
  "PotentialServices": [{
    "Service": "Prometheus",
    "DefaultEndpoints": ["/"],
    "CommonEndpoints": [
      "/metrics",
      "/api/v1/query",
      "/api/v1/query_range",
      "/api/v1/series",
      "/api/v1/labels",
      "/api/v1/label/",
      "/api/v1/targets",
      "/api/v1/rules",
      "/api/v1/alerts",
      "/api/v1/alertmanagers",
      "/api/v1/status/config",
      "/api/v1/status/flags",
      "/api/v1/status/runtimeinfo",
      "/api/v1/status/buildinfo",
      "/api/v1/status/tsdb",
      "/graph",
      "/alerts",
      "/rules",
      "/targets",
      "/service-discovery",
      "/config",
      "/-/healthy",
      "/-/ready",
      "/-/reload"
    ],
    "UndesirableEndpoints": [
      "/prometheus.yml",
      "/prometheus.rules",
      "/alertmanager.yml",
      "/data/",
      "/chunks_head/",
      "/wal/",
      "/queries.active",
      "/.prometheus",
      "/config.yml",
      "/rules/",
      "/alerts/",
      "/.data/",
      "/chunks/",
      "/lock",
      "/queries.active",
      "/queries.log",
      "/nflog/",
      "/marker",
      "/.local/share/prometheus/",
      "/webconfig.yml",
      "/runtime_reloader.json",
      "/snapshots/",
      "/backups/",
      "/prometheus.pid",
      "/prometheus.log",
      "/alertmanager.pid",
      "/alertmanager.log"
    ]
  }]
};

console.log("\nNew Prometheus monitoring service configuration:");
console.log(JSON.stringify(monitoringService, null, 2));

const additionalServices = [
  {
    "Port": 9200,
    "Protocol": "HTTP",
    "PotentialServices": [{
      "Service": "Elasticsearch",
      "DefaultEndpoints": ["/"],
      "CommonEndpoints": [
        "/_cluster/health",
        "/_cluster/state",
        "/_cluster/stats",
        "/_cluster/settings",
        "/_cat/indices",
        "/_cat/nodes",
        "/_cat/health",
        "/_cat/master",
        "/_cat/shards",
        "/_cat/allocation",
        "/_cat/recovery",
        "/_cat/plugins",
        "/_cat/segments",
        "/_cat/count",
        "/_cat/templates",
        "/_search",
        "/_bulk",
        "/_mapping",
        "/_settings",
        "/_aliases",
        "/_analyze",
        "/_count",
        "/_cache/clear",
        "/_refresh",
        "/_nodes/stats",
        "/_nodes/info",
        "/_nodes/hot_threads",
        "/_security",
        "/_xpack",
        "/_template",
        "/_snapshot"
      ],
      "UndesirableEndpoints": [
        "/elasticsearch.yml",
        "/elasticsearch.keystore",
        "/elasticsearch.pid",
        "/config/",
        "/data/",
        "/logs/",
        "/plugins/",
        "/modules/",
        "/scripts/",
        "/snapshots/",
        "/_snapshot/",
        "/_cat/master",
        "/_cat/recovery",
        "/_cat/shards",
        "/_cluster/settings",
        "/_cluster/reroute",
        "/_nodes/hot_threads",
        "/_nodes/usage",
        "/_security/",
        "/_xpack/security/",
        "/_xpack/license/",
        "/_template/",
        "/_river/",
        "/_aliases",
        "/_backup/",
        "/backup/",
        "/.elasticsearch/",
        "/elastic.key",
        "/elastic.crt",
        "/node.key",
        "/node.crt",
        "/transport.key",
        "/transport.crt",
        "/http.key",
        "/http.crt",
        "/instancerc",
        "/instance.yml",
        "/jvm.options"
      ]
    }]
  },
  {
    "Port": 5672,
    "Protocol": "AMQP",
    "PotentialServices": [{
      "Service": "RabbitMQ",
      "DefaultEndpoints": ["/"],
      "CommonEndpoints": [
        "/api/",
        "/api/overview",
        "/api/nodes",
        "/api/exchanges",
        "/api/queues",
        "/api/bindings",
        "/api/vhosts",
        "/api/users",
        "/api/permissions",
        "/api/connections",
        "/api/channels",
        "/api/consumers",
        "/api/parameters",
        "/api/policies",
        "/api/aliveness-test",
        "/api/health/checks/alarms",
        "/api/health/checks/local-alarms",
        "/api/health/checks/certificate-expiration",
        "/api/monitoring",
        "/api/federation-links",
        "/api/operator-policies",
        "/api/parameters/federation",
        "/api/queues/{vhost}",
        "/api/exchanges/{vhost}",
        "/management",
        "/metrics"
      ],
      "UndesirableEndpoints": [
        "/rabbitmq.conf",
        "/advanced.config",
        "/rabbitmq-env.conf",
        "/enabled_plugins",
        "/.erlang.cookie",
        "/mnesia/",
        "/credentials/",
        "/definitions.json",
        "/rabbitmq.log",
        "/rabbit@hostname.log",
        "/crash.log",
        "/erl_crash.dump",
        "/.rabbitmq/",
        "/plugins/",
        "/data/",
        "/config/",
        "/var/lib/rabbitmq/",
        "/etc/rabbitmq/",
        "/mnesia/",
        "/rabbit-priv/",
        "/rabbit-mnesia/",
        "/rabbit-plugins/",
        "/rabbit@hostname/",
        "/rabbit.pid",
        "/rabbitmq-server.pid",
        "/rabbitmq-diagnostics.log",
        "/rabbitmqadmin.conf",
        "/rabbitmqctl.conf"
      ]
    }]
  },
  {
    "Port": 2181,
    "Protocol": "TCP",
    "PotentialServices": [{
      "Service": "ZooKeeper",
      "DefaultEndpoints": ["/"],
      "CommonEndpoints": [
        "/conf",
        "/config",
        "/consumers",
        "/controller",
        "/brokers",
        "/admin",
        "/cluster",
        "/controller_epoch",
        "/zookeeper",
        "/registry",
        "/topology",
        "/discovery",
        "/live_nodes",
        "/status",
        "/election",
        "/locks",
        "/leader",
        "/master",
        "/slaves",
        "/assignments",
        "/ids",
        "/topics",
        "/partitions",
        "/groups",
        "/schemas",
        "/metadata"
      ],
      "UndesirableEndpoints": [
        "/zoo.cfg",
        "/zookeeper.out",
        "/zookeeper.log",
        "/zookeeper-server.log",
        "/zookeeper-audit.log",
        "/myid",
        "/data/",
        "/datalog/",
        "/logs/",
        "/conf/",
        "/bin/",
        "/.zookeeper/",
        "/snapshot/",
        "/version-2/",
        "/log.*",
        "/*.pid",
        "/zookeeper_server.pid",
        "/zookeeper_audit.log",
        "/zookeeper.jks",
        "/zookeeper.keystore",
        "/zookeeper.truststore",
        "/java.env",
        "/configuration.xsl",
        "/log4j.properties",
        "/zookeeper-env.sh",
        "/zoo_sample.cfg"
      ]
    }]
  }
];

console.log(JSON.stringify(additionalServices, null, 2));

// Let's add services that weren't fully covered yet
const additionalServices = {
  "Port": 5432,
  "Protocol": "PostgreSQL",
  "PotentialServices": [{
    "Service": "PostgreSQL",
    "DefaultEndpoints": ["/"],
    "CommonEndpoints": [
      "/postgres",
      "/template0",
      "/template1",
      "/pg_catalog",
      "/information_schema",
      "/pg_toast",
      "/pg_temp",
      "/pg_toast_temp",
      "/pg_stat_tmp",
      "/performance_schema",
      "/public",
      "/contrib",
      "/dbo",
      "/sys",
      "/pg_shadow",
      "/pg_authid",
      "/pg_group",
      "/pg_user",
      "/pg_rules",
      "/pg_views",
      "/pg_tables",
      "/pg_indexes",
      "/pg_stats",
      "/pg_locks",
      "/pg_cursors",
      "/pg_available_extensions",
      "/pg_available_extension_versions",
      "/pg_prepared_statements",
      "/pg_prepared_xacts",
      "/pg_stat_activity",
      "/pg_stat_replication",
      "/pg_stat_ssl",
      "/pg_replication_slots",
      "/pg_stat_database",
      "/pg_stat_user_tables",
      "/pg_statio_user_tables",
      "/pg_stat_user_indexes",
      "/pg_statio_user_indexes"
    ],
    "UndesirableEndpoints": [
      "/postgresql.conf",
      "/pg_hba.conf",
      "/pg_ident.conf",
      "/.pgpass",
      "/postgresql.auto.conf",
      "/recovery.conf",
      "/standby.signal",
      "/postgresql.pid",
      "/postmaster.pid",
      "/postmaster.opts",
      "/pg_log/*",
      "/pg_xlog/*",
      "/pg_wal/*",
      "/pg_dynshmem/*",
      "/pg_notify/*",
      "/pg_replslot/*",
      "/pg_serial/*",
      "/pg_snapshots/*",
      "/pg_stat_tmp/*",
      "/pg_subtrans/*",
      "/pg_tblspc/*",
      "/pg_twophase/*",
      "/*.bak",
      "/*.old",
      "/*.conf.sample",
      "/backup/*",
      "/dump/*",
      "/archive/*",
      "/pg_dump*",
      "/psql_history",
      "/.psql_history",
      "/pg_service.conf",
      "/pgpass",
      "/root/.pgpass",
      "/pg_upgrade_utility.log",
      "/pg_upgrade_server.log",
      "/pg_upgrade_internal.log",
      "/logfile",
      "/global/pg_control",
      "/global/pg_filenode.map",
      "/global/pg_internal.init"
    ]
  }]
};

console.log("New PostgreSQL service configuration:");
console.log(JSON.stringify(additionalServices, null, 2));

// Let's add new services for common ports
const newServices = {
  "Port": 5601,
  "Protocol": "HTTP",
  "PotentialServices": [{
    "Service": "Kibana",
    "DefaultEndpoints": ["/"],
    "CommonEndpoints": [
      "/app/kibana",
      "/app/home",
      "/app/management",
      "/app/dev_tools",
      "/api/status",
      "/api/features",
      "/api/index_patterns",
      "/elasticsearch",
      "/spaces",
      "/saved_objects",
      "/internal",
      "/goto",
      "/login",
      "/logout",
      "/dashboards",
      "/visualize",
      "/discover",
      "/canvas",
      "/maps",
      "/uptime",
      "/apm",
      "/metrics",
      "/logs",
      "/timelion",
      "/graph",
      "/monitoring",
      "/management/kibana",
      "/management/elasticsearch"
    ],
    "UndesirableEndpoints": [
      "/kibana.yml",
      "/.kibana",
      "/config/kibana.yml",
      "/data/",
      "/bin/",
      "/plugins/",
      "/optimize/",
      "/status",
      "/api/console/proxy",
      "/internal/security/login",
      "/internal/security/session",
      "/bootstrap.js",
      "/bundles/",
      "/.node-version",
      "/package.json",
      "/config/",
      "/kibana.keystore",
      "/kibana.logfile",
      "/kibana.pid",
      "/node_modules/",
      "/optimize/.babelcache",
      "/data/sessions/",
      "/data/translations/",
      "/.i18nrc.json",
      "/tsconfig.json",
      "/webpack.config.js",
      "/.npmrc"
    ]
  }]
};

console.log("\nNew Kibana service configuration:");
console.log(JSON.stringify(newServices, null, 2));

// Let's also add a monitoring service configuration
const monitoringService = {
  "Port": 9090,
  "Protocol": "HTTP",
  "PotentialServices": [{
    "Service": "Prometheus",
    "DefaultEndpoints": ["/"],
    "CommonEndpoints": [
      "/metrics",
      "/api/v1/query",
      "/api/v1/query_range",
      "/api/v1/series",
      "/api/v1/labels",
      "/api/v1/label/",
      "/api/v1/targets",
      "/api/v1/rules",
      "/api/v1/alerts",
      "/api/v1/alertmanagers",
      "/api/v1/status/config",
      "/api/v1/status/flags",
      "/api/v1/status/runtimeinfo",
      "/api/v1/status/buildinfo",
      "/api/v1/status/tsdb",
      "/graph",
      "/alerts",
      "/rules",
      "/targets",
      "/service-discovery",
      "/config",
      "/-/healthy",
      "/-/ready",
      "/-/reload"
    ],
    "UndesirableEndpoints": [
      "/prometheus.yml",
      "/prometheus.rules",
      "/alertmanager.yml",
      "/data/",
      "/chunks_head/",
      "/wal/",
      "/queries.active",
      "/.prometheus",
      "/config.yml",
      "/rules/",
      "/alerts/",
      "/.data/",
      "/chunks/",
      "/lock",
      "/queries.active",
      "/queries.log",
      "/nflog/",
      "/marker",
      "/.local/share/prometheus/",
      "/webconfig.yml",
      "/runtime_reloader.json",
      "/snapshots/",
      "/backups/",
      "/prometheus.pid",
      "/prometheus.log",
      "/alertmanager.pid",
      "/alertmanager.log"
    ]
  }]
};

console.log("\nNew Prometheus monitoring service configuration:");
console.log(JSON.stringify(monitoringService, null, 2));
const kafkaAndMore = [
  {
    "Port": 9092,
    "Protocol": "TCP",
    "PotentialServices": [{
      "Service": "Kafka",
      "DefaultEndpoints": ["/"],
      "CommonEndpoints": [
        "/brokers/ids",
        "/brokers/topics",
        "/brokers/seqid",
        "/config/changes",
        "/admin/delete_topics",
        "/config/topics",
        "/config/clients",
        "/config/users",
        "/config/brokers",
        "/consumers/groups",
        "/latest_producer_id_block",
        "/controller",
        "/controller_epoch",
        "/isr_change_notification",
        "/admin",
        "/cluster/id",
        "/migration",
        "/log_dir_event_notification",
        "/metrics",
        "/health",
        "/status",
        "/__consumer_offsets",
        "/_schemas",
        "/schema_ids",
        "/topics",
        "/consumer-groups",
        "/api/cluster",
        "/api/broker",
        "/api/topic",
        "/api/partition",
        "/api/replica",
        "/api/consumer",
        "/api/producer",
        "/api/offset"
      ],
      "UndesirableEndpoints": [
        "/server.properties",
        "/kafka.properties",
        "/producer.properties",
        "/consumer.properties",
        "/log4j.properties",
        "/kafka-logs/",
        "/kafka-logs-*/",
        "/logs/",
        "/config/",
        "/data/",
        "/tmp/",
        "/*.pid",
        "/kafka.pid",
        "/kafka-run-class.sh",
        "/kafka-server-start.sh",
        "/kafka-topics.sh",
        "/kafka.keystore.jks",
        "/kafka.truststore.jks",
        "/kafka_client_jaas.conf",
        "/kafka_server_jaas.conf",
        "/kafka-acls.sh",
        "/kafka-configs.sh",
        "/kafka-console-*.sh",
        "/kafka-consumer-*.sh",
        "/kafka-producer-*.sh",
        "/kafka-reassign-partitions.sh",
        "/kafka-topics-completion.sh",
        "/kafka-verifiable-*.sh",
        "/.kafka/",
        "/connect.properties",
        "/connect-distributed.properties",
        "/connect-standalone.properties",
        "/connect-file-*.properties",
        "/connector.properties",
        "/tools-log4j.properties",
        "/meta.properties",
        "/replication-offset-checkpoint",
        "/recovery-point-offset-checkpoint",
        "/cleaner-offset-checkpoint"
      ]
    }]
  },
  {
    "Port": 15672,
    "Protocol": "HTTP",
    "PotentialServices": [{
      "Service": "RabbitMQ Management",
      "DefaultEndpoints": ["/"],
      "CommonEndpoints": [
        "/api",
        "/api/overview",
        "/api/cluster-name",
        "/api/nodes",
        "/api/nodes/management",
        "/api/vhosts",
        "/api/users",
        "/api/users/guest",
        "/api/permissions",
        "/api/exchanges",
        "/api/queues",
        "/api/bindings",
        "/api/policies",
        "/api/parameters",
        "/api/connections",
        "/api/channels",
        "/api/consumers",
        "/api/extensions",
        "/api/definitions",
        "/api/monitoring",
        "/api/aliveness-test",
        "/api/health/checks/alarms",
        "/api/health/checks/local-alarms",
        "/api/health/checks/virtual-hosts",
        "/cli",
        "/mgmt",
        "/management",
        "/web/management"
      ],
      "UndesirableEndpoints": [
        "/api/cluster-name",
        "/api/users/guest",
        "/api/monitoring/sessions",
        "/api/definitions",
        "/api/permissions/guest",
        "/mgmt/script",
        "/cli/rabbitmqadmin",
        "/web/management/script",
        "/.erlang.cookie",
        "/enabled_plugins",
        "/rabbitmq.conf",
        "/advanced.config",
        "/rabbitmq-env.conf",
        "/rabbitmq-defaults",
        "/rabbitmq-diagnostics",
        "/rabbitmq-plugins",
        "/rabbitmq-server",
        "/rabbitmqctl"
      ]
    }]
  },
  {
    "Port": 3000,
    "Protocol": "HTTP",
    "PotentialServices": [{
      "Service": "Grafana",
      "DefaultEndpoints": ["/"],
      "CommonEndpoints": [
        "/login",
        "/logout",
        "/signup",
        "/profile",
        "/admin",
        "/dashboard",
        "/dashboards",
        "/explore",
        "/alerting",
        "/a/",
        "/api/dashboards",
        "/api/search",
        "/api/datasources",
        "/api/users",
        "/api/org",
        "/api/auth",
        "/api/alerts",
        "/api/annotations",
        "/api/live",
        "/api/plugins",
        "/public/plugins",
        "/public/dashboards",
        "/metrics",
        "/healthz",
        "/api/health",
        "/api/stats",
        "/api/teams",
        "/api/folders",
        "/api/snapshots",
        "/api/library",
        "/api/preferences",
        "/api/enterprise"
      ],
      "UndesirableEndpoints": [
        "/grafana.ini",
        "/grafana.db",
        "/grafana-server",
        "/custom.ini",
        "/ldap.toml",
        "/provisioning/",
        "/conf/",
        "/data/",
        "/plugins/",
        "/public/",
        "/logs/",
        "/certs/",
        "/.grafana/",
        "/grafana.pid",
        "/grafana.log",
        "/sessions/",
        "/grafana-cli",
        "/api/admin/settings",
        "/api/admin/users",
        "/api/admin/orgs",
        "/api/admin/stats",
        "/api/admin/upgrade",
        "/api/login",
        "/api/user/password",
        "/api/user/apikeys",
        "/api/org/users",
        "/api/org/invites",
        "/*.sqlite3",
        "/*.db",
        "/grafana.cert",
        "/grafana.key",
        "/data/grafana.db",
        "/data/sessions"
      ]
    }]
  },
  {
    "Port": 2375,
    "Protocol": "HTTP",
    "PotentialServices": [{
      "Service": "Docker",
      "DefaultEndpoints": ["/"],
      "CommonEndpoints": [
        "/version",
        "/info",
        "/images/json",
        "/containers/json",
        "/networks",
        "/volumes",
        "/events",
        "/system/df",
        "/_ping",
        "/auth",
        "/build",
        "/commit",
        "/configs",
        "/containers/create",
        "/images/search",
        "/images/pull",
        "/images/push",
        "/exec",
        "/swarm",
        "/services",
        "/tasks",
        "/plugins",
        "/nodes",
        "/secrets",
        "/distribution"
      ],
      "UndesirableEndpoints": [
        "/var/run/docker.sock",
        "/etc/docker/daemon.json",
        "/etc/docker/key.json",
        "/.docker/config.json",
        "/.dockercfg",
        "/var/lib/docker/",
        "/etc/docker/",
        "/run/docker/",
        "/docker.pid",
        "/docker.log",
        "/dockerd",
        "/docker-compose.yml",
        "/docker-compose.yaml",
        "/Dockerfile",
        "/.env",
        "/docker-compose.override.yml",
        "/docker-compose.override.yaml",
        "/docker-compose.prod.yml",
        "/docker-compose.production.yml",
        "/docker-compose.staging.yml",
        "/docker-compose.dev.yml",
        "/docker-compose.development.yml",
        "/docker-compose.test.yml",
        "/.docker/daemon.json",
        "/.docker/ca.pem",
        "/.docker/cert.pem",
        "/.docker/key.pem",
        "/etc/systemd/system/docker.service",
        "/etc/systemd/system/docker.socket"
      ]
    }]
  }
];

console.log(JSON.stringify(kafkaAndMore, null, 2));

const devopsServices = [
  {
    "Port": 8080,
    "Protocol": "HTTP",
    "PotentialServices": [{
      "Service": "Nexus Repository",
      "DefaultEndpoints": ["/"],
      "CommonEndpoints": [
        "/nexus",
        "/service/rest",
        "/service/metrics",
        "/service/local",
        "/service/rest/v1/status",
        "/service/rest/v1/assets",
        "/service/rest/v1/components",
        "/service/rest/v1/repositories",
        "/service/rest/v1/search",
        "/repository/",
        "/repository/maven-public",
        "/repository/maven-releases",
        "/repository/maven-snapshots",
        "/repository/nuget-hosted",
        "/repository/npm-hosted",
        "/repository/pypi-hosted",
        "/repository/docker-hosted",
        "/service/siesta",
        "/service/extdirect",
        "/service/rest/beta",
        "/service/rest/swagger.json",
        "/swagger-ui",
        "/static"
      ],
      "UndesirableEndpoints": [
        "/nexus-data/",
        "/sonatype-work/",
        "/nexus.properties",
        "/nexus.xml",
        "/nexus.log",
        "/nexus.vmoptions",
        "/storage/",
        "/conf/",
        "/logs/",
        "/tmp/",
        "/orient/",
        "/elasticsearch/",
        "/blobs/",
        "/cache/",
        "/db/",
        "/keystores/",
        "/etc/nexus-default.properties",
        "/etc/fabric/",
        "/etc/karaf/",
        "/etc/logback/",
        "/etc/ssl/",
        "/*.jks",
        "/*.keystore",
        "/*.truststore",
        "/admin.password",
        "/anonymous.password",
        "/deployment.password",
        "/jetty-https.xml",
        "/jetty.xml",
        "/logback.xml",
        "/logback-access.xml",
        "/orient-console.sh",
        "/restore-from-backup.sh"
      ]
    }]
  },
  {
    "Port": 9000,
    "Protocol": "HTTP",
    "PotentialServices": [{
      "Service": "SonarQube",
      "DefaultEndpoints": ["/"],
      "CommonEndpoints": [
        "/api",
        "/api/issues",
        "/api/projects",
        "/api/measures",
        "/api/metrics",
        "/api/rules",
        "/api/qualityprofiles",
        "/api/qualitygates",
        "/api/components",
        "/api/authentication",
        "/api/system",
        "/api/permissions",
        "/api/project_badges",
        "/api/project_tags",
        "/api/settings",
        "/api/sources",
        "/api/users",
        "/api/webhooks",
        "/dashboard",
        "/projects",
        "/issues",
        "/measures",
        "/coding_rules",
        "/profiles",
        "/quality_gates",
        "/web_api",
        "/about"
      ],
      "UndesirableEndpoints": [
        "/conf/",
        "/logs/",
        "/data/",
        "/extensions/",
        "/lib/",
        "/web/",
        "/elasticsearch/",
        "/temp/",
        "/sonar.properties",
        "/sonar-scanner.properties",
        "/sonar-project.properties",
        "/wrapper.conf",
        "/.sonar/",
        "/sonar-scanner-debug.log",
        "/sq-process.pid",
        "/sq-process.port",
        "/.scannerwork/",
        "/report-task.txt",
        "/analysis-report.json",
        "/scanner-report/",
        "/.sonarqube/",
        "/sonar-auth.properties",
        "/sonar.auth.jwt.secret",
        "/sonarqube.log",
        "/access.log",
        "/web.log",
        "/ce.log",
        "/es.log"
      ]
    }]
  },
  {
    "Port": 4444,
    "Protocol": "HTTP",
    "PotentialServices": [{
      "Service": "Selenium Grid",
      "DefaultEndpoints": ["/"],
      "CommonEndpoints": [
        "/wd/hub",
        "/grid/console",
        "/grid/register",
        "/grid/api/proxy",
        "/grid/api/hub",
        "/grid/api/testsession",
        "/grid/resources",
        "/lifecycle-manager",
        "/status",
        "/ui",
        "/graphql",
        "/router",
        "/sessions",
        "/slot/reserve",
        "/slot/release",
        "/se/grid",
        "/assets",
        "/browserslots",
        "/graphql/playground",
        "/grid/admin/LiveView",
        "/grid/admin/SessionManager",
        "/grid/admin/DetailedView",
        "/grid/admin/configuration"
      ],
      "UndesirableEndpoints": [
        "/grid.properties",
        "/grid.json",
        "/grid.yml",
        "/grid.yaml",
        "/config.json",
        "/nodeconfig.json",
        "/selenium.log",
        "/logs/",
        "/config/",
        "/data/",
        "/tmp/",
        "/.selenium/",
        "/hub.log",
        "/node.log",
        "/selenium-server.log",
        "/selenium-node.log",
        "/selenium-hub.log",
        "/geckodriver.log",
        "/chromedriver.log",
        "/IEDriverServer.log",
        "/hub.conf",
        "/node.conf",
        "/selenium.conf",
        "/grid-config.yaml",
        "/grid-router.yaml",
        "/certificates/",
        "/browser-capabilities.json",
        "/user-extensions.js",
        "/custom-firefox-profile/"
      ]
    }]
  }
];

console.log(JSON.stringify(devopsServices, null, 2));

const dbAndCacheServices = [
  {
    "Port": 28017,
    "Protocol": "HTTP",
    "PotentialServices": [{
      "Service": "MongoDB REST Interface",
      "DefaultEndpoints": ["/"],
      "CommonEndpoints": [
        "/listDatabases",
        "/serverStatus",
        "/replSetGetStatus",
        "/stats",
        "/isMaster",
        "/databases",
        "/collections",
        "/admin",
        "/local",
        "/config",
        "/test",
        "/system.indexes",
        "/system.users",
        "/system.profile",
        "/system.namespaces",
