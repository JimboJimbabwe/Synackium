{
  "Ports": [
    {
      "Port": 5432,
      "Protocol": "PostgreSQL",
      "PotentialServices": [
        {
          "Service": "PostgreSQL",
          "DefaultEndpoints": ["/"],
          "CommonEndpoints": [
            "/postgres",
            "/template0",
            "/template1",
            "/pg_catalog",
            "/information_schema",
            "/pg_toast",
            "/pg_temp",
            "/pg_toast_temp",
            "/pg_stat_tmp",
            "/performance_schema",
            "/public",
            "/contrib",
            "/dbo",
            "/sys",
            "/pg_shadow",
            "/pg_authid",
            "/pg_group",
            "/pg_user",
            "/pg_rules",
            "/pg_views",
            "/pg_tables",
            "/pg_indexes",
            "/pg_stats",
            "/pg_locks",
            "/pg_cursors",
            "/pg_available_extensions",
            "/pg_available_extension_versions",
            "/pg_prepared_statements",
            "/pg_prepared_xacts",
            "/pg_stat_activity",
            "/pg_stat_replication",
            "/pg_stat_ssl",
            "/pg_replication_slots",
            "/pg_stat_database",
            "/pg_stat_user_tables",
            "/pg_statio_user_tables",
            "/pg_stat_user_indexes",
            "/pg_statio_user_indexes"
          ],
          "UndesirableEndpoints": [
            "/postgresql.conf",
            "/pg_hba.conf",
            "/pg_ident.conf",
            "/.pgpass",
            "/postgresql.auto.conf",
            "/recovery.conf",
            "/standby.signal",
            "/postgresql.pid",
            "/postmaster.pid",
            "/postmaster.opts",
            "/pg_log/*",
            "/pg_xlog/*",
            "/pg_wal/*",
            "/pg_dynshmem/*",
            "/pg_notify/*",
            "/pg_replslot/*",
            "/pg_serial/*",
            "/pg_snapshots/*",
            "/pg_stat_tmp/*",
            "/pg_subtrans/*",
            "/pg_tblspc/*",
            "/pg_twophase/*",
            "/*.bak",
            "/*.old",
            "/*.conf.sample",
            "/backup/*",
            "/dump/*",
            "/archive/*",
            "/pg_dump*",
            "/psql_history",
            "/.psql_history",
            "/pg_service.conf",
            "/pgpass",
            "/root/.pgpass",
            "/pg_upgrade_utility.log",
            "/pg_upgrade_server.log",
            "/pg_upgrade_internal.log",
            "/logfile",
            "/global/pg_control",
            "/global/pg_filenode.map",
            "/global/pg_internal.init"
          ]
        }
      ]
    },
    {
      "Port": 5601,
      "Protocol": "HTTP",
      "PotentialServices": [
        {
          "Service": "Kibana",
          "DefaultEndpoints": ["/"],
          "CommonEndpoints": [
            "/app/kibana",
            "/app/home",
            "/app/management",
            "/app/dev_tools",
            "/api/status",
            "/api/features",
            "/api/index_patterns",
            "/elasticsearch",
            "/spaces",
            "/saved_objects",
            "/internal",
            "/goto",
            "/login",
            "/logout",
            "/dashboards",
            "/visualize",
            "/discover",
            "/canvas",
            "/maps",
            "/uptime",
            "/apm",
            "/metrics",
            "/logs",
            "/timelion",
            "/graph",
            "/monitoring",
            "/management/kibana",
            "/management/elasticsearch"
          ],
          "UndesirableEndpoints": [
            "/kibana.yml",
            "/.kibana",
            "/config/kibana.yml",
            "/data/",
            "/bin/",
            "/plugins/",
            "/optimize/",
            "/status",
            "/api/console/proxy",
            "/internal/security/login",
            "/internal/security/session",
            "/bootstrap.js",
            "/bundles/",
            "/.node-version",
            "/package.json",
            "/config/",
            "/kibana.keystore",
            "/kibana.logfile",
            "/kibana.pid",
            "/node_modules/",
            "/optimize/.babelcache",
            "/data/sessions/",
            "/data/translations/",
            "/.i18nrc.json",
            "/tsconfig.json",
            "/webpack.config.js",
            "/.npmrc"
          ]
        }
      ]
    },
    {
      "Port": 9090,
      "Protocol": "HTTP",
      "PotentialServices": [
        {
          "Service": "Prometheus",
          "DefaultEndpoints": ["/"],
          "CommonEndpoints": [
            "/metrics",
            "/api/v1/query",
            "/api/v1/query_range",
            "/api/v1/series",
            "/api/v1/labels",
            "/api/v1/label/",
            "/api/v1/targets",
            "/api/v1/rules",
            "/api/v1/alerts",
            "/api/v1/alertmanagers",
            "/api/v1/status/config",
            "/api/v1/status/flags",
            "/api/v1/status/runtimeinfo",
            "/api/v1/status/buildinfo",
            "/api/v1/status/tsdb",
            "/graph",
            "/alerts",
            "/rules",
            "/targets",
            "/service-discovery",
            "/config",
            "/-/healthy",
            "/-/ready",
            "/-/reload"
          ],
          "UndesirableEndpoints": [
            "/prometheus.yml",
            "/prometheus.rules",
            "/alertmanager.yml",
            "/data/",
            "/chunks_head/",
            "/wal/",
            "/queries.active",
            "/.prometheus",
            "/config.yml",
            "/rules/",
            "/alerts/",
            "/.data/",
            "/chunks/",
            "/lock",
            "/queries.active",
            "/queries.log",
            "/nflog/",
            "/marker",
            "/.local/share/prometheus/",
            "/webconfig.yml",
            "/runtime_reloader.json",
            "/snapshots/",
            "/backups/",
            "/prometheus.pid",
            "/prometheus.log",
            "/alertmanager.pid",
            "/alertmanager.log"
          ]
        }
      ]
    },
    {
      "Port": 9200,
      "Protocol": "HTTP",
      "PotentialServices": [
        {
          "Service": "Elasticsearch",
          "DefaultEndpoints": ["/"],
          "CommonEndpoints": [
            "/_cluster/health",
            "/_cluster/state",
            "/_cluster/stats",
            "/_cluster/settings",
            "/_cat/indices",
            "/_cat/nodes",
            "/_cat/health",
            "/_cat/master",
            "/_cat/shards",
            "/_cat/allocation",
            "/_cat/recovery",
            "/_cat/plugins",
            "/_cat/segments",
            "/_cat/count",
            "/_cat/templates",
            "/_search",
            "/_bulk",
            "/_mapping",
            "/_settings",
            "/_aliases",
            "/_analyze",
            "/_count",
            "/_cache/clear",
            "/_refresh",
            "/_nodes/stats",
            "/_nodes/info",
            "/_nodes/hot_threads",
            "/_security",
            "/_xpack",
            "/_template",
            "/_snapshot"
          ],
          "UndesirableEndpoints": [
            "/elasticsearch.yml",
            "/elasticsearch.keystore",
            "/elasticsearch.pid",
            "/config/",
            "/data/",
            "/logs/",
            "/plugins/",
            "/modules/",
            "/scripts/",
            "/snapshots/",
            "/_snapshot/",
            "/_cat/master",
            "/_cat/recovery",
            "/_cat/shards",
            "/_cluster/settings",
            "/_cluster/reroute",
            "/_nodes/hot_threads",
            "/_nodes/usage",
            "/_security/",
            "/_xpack/security/",
            "/_xpack/license/",
            "/_template/",
            "/_river/",
            "/_aliases",
            "/_backup/",
            "/backup/",
            "/.elasticsearch/",
            "/elastic.key",
            "/elastic.crt",
            "/node.key",
            "/node.crt",
            "/transport.key",
            "/transport.crt",
            "/http.key",
            "/http.crt",
            "/instancerc",
            "/instance.yml",
            "/jvm.options"
          ]
        }
      ]
    },
    {
      "Port": 5672,
      "Protocol": "AMQP",
      "PotentialServices": [
        {
          "Service": "RabbitMQ",
          "DefaultEndpoints": ["/"],
          "CommonEndpoints": [
            "/api/",
            "/api/overview",
            "/api/nodes",
            "/api/exchanges",
            "/api/queues",
            "/api/bindings",
            "/api/vhosts",
            "/api/users",
            "/api/permissions",
            "/api/connections",
            "/api/channels",
            "/api/consumers",
            "/api/parameters",
            "/api/policies",
            "/api/aliveness-test",
            "/api/health/checks/alarms",
            "/api/health/checks/local-alarms",
            "/api/health/checks/certificate-expiration",
            "/api/monitoring",
            "/api/federation-links",
            "/api/operator-policies",
            "/api/parameters/federation",
            "/api/queues/{vhost}",
            "/api/exchanges/{vhost}",
            "/management",
            "/metrics"
          ],
          "UndesirableEndpoints": [
            "/rabbitmq.conf",
            "/advanced.config",
            "/rabbitmq-env.conf",
            "/enabled_plugins",
            "/.erlang.cookie",
            "/mnesia/",
            "/credentials/",
            "/definitions.json",
            "/rabbitmq.log",
            "/rabbit@hostname.log",
            "/crash.log",
            "/erl_crash.dump",
            "/.rabbitmq/",
            "/plugins/",
            "/data/",
            "/config/",
            "/var/lib/rabbitmq/",
            "/etc/rabbitmq/",
            "/mnesia/",
            "/rabbit-priv/",
            "/rabbit-mnesia/",
            "/rabbit-plugins/",
            "/rabbit@hostname/",
            "/rabbit.pid",
            "/rabbitmq-server.pid",
            "/rabbitmq-diagnostics.log",
            "/rabbitmqadmin.conf",
            "/rabbitmqctl.conf"
          ]
        }
      ]
    },
    {
      "Port": 2181,
      "Protocol": "TCP",
      "PotentialServices": [
        {
          "Service": "ZooKeeper",
          "DefaultEndpoints": ["/"],
          "CommonEndpoints": [
            "/conf",
            "/config",
            "/consumers",
            "/controller",
            "/brokers",
            "/admin",
            "/cluster",
            "/controller_epoch",
            "/zookeeper",
            "/registry",
            "/topology",
            "/discovery",
            "/live_nodes",
            "/status",
            "/election",
            "/locks",
            "/leader",
            "/master",
            "/slaves",
            "/assignments",
            "/ids",
            "/topics",
            "/partitions",
            "/groups",
            "/schemas",
            "/metadata"
          ],
          "UndesirableEndpoints": [
            "/zoo.cfg",
            "/zookeeper.out",
            "/zookeeper.log",
            "/zookeeper-server.log",
            "/zookeeper-audit.log",
            "/myid",
            "/data/",
            "/datalog/",
            "/logs/",
            "/conf/",
            "/bin/",
            "/.zookeeper/",
            "/snapshot/",
            "/version-2/",
            "/log.*",
            "/*.pid",
            "/zookeeper_server.pid",
            "/zookeeper_audit.log",
            "/zookeeper.jks",
            "/zookeeper.keystore",
            "/zookeeper.truststore",
            "/java.env",
            "/configuration.xsl",
            "/log4j.properties",
            "/zookeeper-env.sh",
            "/zoo_sample.cfg"
          ]
        }
      ]
    },
    {
      "Port": 9092,
      "Protocol": "TCP",
      "PotentialServices": [
        {
          "Service": "Kafka",
          "DefaultEndpoints": ["/"],
          "CommonEndpoints": [
            "/brokers/ids",
            "/brokers/topics",
            "/brokers/seqid",
            "/config/changes",
            "/admin/delete_topics",
            "/config/topics",
            "/config/clients",
            "/config/users",
            "/config/brokers",
            "/consumers/groups",
            "/latest_producer_id_block",
            "/controller",
            "/controller_epoch",
            "/isr_change_notification",
            "/admin",
            "/cluster/id",
            "/migration",
            "/log_dir_event_notification",
            "/metrics",
            "/health",
            "/status",
            "/__consumer_offsets",
            "/_schemas",
            "/schema_ids",
            "/topics",
            "/consumer-groups",
            "/api/cluster",
            "/api/broker",
            "/api/topic",
            "/api/partition",
            "/api/replica",
            "/api/consumer",
            "/api/producer",
            "/api/offset"
          ],
          "UndesirableEndpoints": [
            "/server.properties",
            "/kafka.properties",
            "/producer.properties",
            "/consumer.properties",
            "/log4j.properties",
            "/kafka-logs/",
            "/kafka-logs-*/",
            "/logs/",
            "/config/",
            "/data/",
            "/tmp/",
            "/*.pid",
            "/kafka.pid",
            "/kafka-run-class.sh",
            "/kafka-server-start.sh",
            "/kafka-topics.sh",
            "/kafka.keystore.jks",
            "/kafka.truststore.jks",
            "/kafka_client_jaas.conf",
            "/kafka_server_jaas.conf",
            "/kafka-acls.sh",
            "/kafka-configs.sh",
            "/kafka-console-*.sh",
            "/kafka-consumer-*.sh",
            "/kafka-producer-*.sh",
            "/kafka-reassign-partitions.sh",
            "/kafka-topics-completion.sh",
            "/kafka-verifiable-*.sh",
            "/.kafka/",
            "/connect.properties",
            "/connect-distributed.properties",
            "/connect-standalone.properties",
            "/connect-file-*.properties",
            "/connector.properties",
            "/tools-log4j.properties",
            "/meta.properties",
            "/replication-offset-checkpoint",
            "/recovery-point-offset-checkpoint",
            "/cleaner-offset-checkpoint"
          ]
        }
      ]
    },
    {
      "Port": 15672,
      "Protocol": "HTTP",
      "PotentialServices": [
        {
          "Service": "RabbitMQ Management",
          "DefaultEndpoints": ["/"],
          "CommonEndpoints": [
            "/api",
            "/api/overview",
            "/api/cluster-name",
            "/api/nodes",
            "/api/nodes/management",
            "/api/vhosts",
            "/api/users",
            "/api/users/guest",
            "/api/permissions",
            "/api/exchanges",
            "/api/queues",
            "/api/bindings",
            "/api/policies",
            "/api/parameters",
            "/api/connections",
            "/api/channels",
            "/api/consumers",
            "/api/extensions",
            "/api/definitions",
            "/api/monitoring",
            "/api/aliveness-test",
            "/api/health/checks/alarms",
            "/api/health/checks/local-alarms",
            "/api/health/checks/virtual-hosts",
            "/cli",
            "/mgmt",
            "/management",
            "/web/management"
          ],
          "UndesirableEndpoints": [
            "/api/cluster-name",
            "/api/users/guest",
            "/api/monitoring/sessions",
            "/api/definitions",
            "/api/permissions/guest",
            "/mgmt/script",
            "/cli/rabbitmqadmin",
            "/web/management/script",
            "/.erlang.cookie",
            "/enabled_plugins",
            "/rabbitmq.conf",
            "/advanced.config",
            "/rabbitmq-env.conf",
            "/rabbitmq-defaults",
            "/rabbitmq-diagnostics",
            "/rabbitmq-plugins",
            "/rabbitmq-server",
            "/rabbitmqctl"
          ]
        }
      ]
    },
    {
      "Port": 3000,
      "Protocol": "HTTP",
      "PotentialServices": [
        {
          "Service": "Grafana",
          "DefaultEndpoints": ["/"],
          "CommonEndpoints": [
            "/login",
            "/logout",
            "/signup",
            "/profile",
            "/admin",
            "/dashboard",
            "/dashboards",
            "/explore",
            "/alerting",
            "/a/",
            "/api/dashboards",
            "/api/search",
            "/api/datasources",
            "/api/users",
            "/api/org",
            "/api/auth",
            "/api/alerts",
            "/api/annotations",
            "/api/live",
            "/api/plugins",
            "/public/plugins",
            "/public/dashboards",
            "/metrics",
            "/healthz",
            "/api/health",
            "/api/stats",
            "/api/teams",
            "/api/folders",
            "/api/snapshots",
            "/api/library",
            "/api/preferences",
            "/api/enterprise"
          ],
          "UndesirableEndpoints": [
            "/grafana.ini",
            "/grafana.db",
            "/grafana-server",
            "/custom.ini",
            "/ldap.toml",
            "/provisioning/",
            "/conf/",
            "/data/",
            "/plugins/",
            "/public/",
            "/logs/",
            "/certs/",
            "/.grafana/",
            "/grafana.pid",
            "/grafana.log",
            "/sessions/",
            "/grafana-cli",
            "/api/admin/settings",
            "/api/admin/users",
            "/api/admin/orgs",
            "/api/admin/stats",
            "/api/admin/upgrade",
            "/api/login",
            "/api/user/password",
            "/api/user/apikeys",
            "/api/org/users",
            "/api/org/invites",
            "/*.sqlite3",
            "/*.db",
            "/grafana.cert",
            "/grafana.key",
            "/data/grafana.db",
            "/data/sessions"
          ]
        }
      ]
    },
    {
      "Port": 2375,
      "Protocol": "HTTP",
      "PotentialServices": [
        {
          "Service": "Docker",
          "DefaultEndpoints": ["/"],
          "CommonEndpoints": [
            "/version",
            "/info",
            "/images/json",
            "/containers/json",
            "/networks",
            "/volumes",
            "/events",
            "/system/df",
            "/_ping",
            "/auth",
            "/build",
            "/commit",
            "/configs",
            "/containers/create",
            "/images/search",
            "/images/pull",
            "/images/push",
            "/exec",
            "/swarm",
            "/services",
            "/tasks",
            "/plugins",
            "/nodes",
            "/secrets",
            "/distribution"
          ],
          "UndesirableEndpoints": [
            "/var/run/docker.sock",
            "/etc/docker/daemon.json",
            "/etc/docker/key.json",
            "/.docker/config.json",
            "/.dockercfg",
            "/var/lib/docker/",
            "/etc/docker/",
            "/run/docker/",
            "/docker.pid",
            "/docker.log",
            "/dockerd",
            "/docker-compose.yml",
            "/docker-compose.yaml",
            "/Dockerfile",
            "/.env",
            "/docker-compose.override.yml",
            "/docker-compose.override.yaml",
            "/docker-compose.prod.yml",
            "/docker-compose.production.yml",
            "/docker-compose.staging.yml",
            "/docker-compose.dev.yml",
            "/docker-compose.development.yml",
            "/docker-compose.test.yml",
            "/.docker/daemon.json",
            "/.docker/ca.pem",
            "/.docker/cert.pem",
            "/.docker/key.pem",
            "/etc/systemd/system/docker.service",
            "/etc/systemd/system/docker.socket"
          ]
        }
      ]
    },
    {
      "Port": 8080,
      "Protocol": "HTTP",
      "PotentialServices": [
        {
          "Service": "Nexus Repository",
          "DefaultEndpoints": ["/"],
          "CommonEndpoints": [
            "/nexus",
            "/service/rest",
            "/service/metrics",
            "/service/local",
            "/service/rest/v1/status",
            "/service/rest/v1/assets",
            "/service/rest/v1/components",
            "/service/rest/v1/repositories",
            "/service/rest/v1/search",
            "/repository/",
            "/repository/maven-public",
            "/repository/maven-releases",
            "/repository/maven-snapshots",
            "/repository/nuget-hosted",
            "/repository/npm-hosted",
            "/repository/pypi-hosted",
            "/repository/docker-hosted",
            "/service/siesta",
            "/service/extdirect",
            "/service/rest/beta",
            "/service/rest/swagger.json",
            "/swagger-ui",
            "/static"
          ],
          "UndesirableEndpoints": [
            "/nexus-data/",
            "/sonatype-work/",
            "/nexus.properties",
            "/nexus.xml",
            "/nexus.log",
            "/nexus.vmoptions",
            "/storage/",
            "/conf/",
            "/logs/",
            "/tmp/",
            "/orient/",
            "/elasticsearch/",
            "/blobs/",
            "/cache/",
            "/db/",
            "/keystores/",
            "/etc/nexus-default.properties",
            "/etc/fabric/",
            "/etc/karaf/",
            "/etc/logback/",
            "/etc/ssl/",
            "/*.jks",
            "/*.keystore",
            "/*.truststore",
            "/admin.password",
            "/anonymous.password",
            "/deployment.password",
            "/jetty-https.xml",
            "/jetty.xml",
            "/logback.xml",
            "/logback-access.xml",
            "/orient-console.sh",
            "/restore-from-backup.sh"
          ]
        }
      ]
    },
    {
      "Port": 9000,
      "Protocol": "HTTP",
      "PotentialServices": [
        {
          "Service": "SonarQube",
          "DefaultEndpoints": ["/"],
          "CommonEndpoints": [
            "/api",
            "/api/issues",
            "/api/projects",
            "/api/measures",
            "/api/metrics",
            "/api/rules",
            "/api/qualityprofiles",
            "/api/qualitygates",
            "/api/components",
            "/api/authentication",
            "/api/system",
            "/api/permissions",
            "/api/project_badges",
            "/api/project_tags",
            "/api/settings",
            "/api/sources",
            "/api/users",
            "/api/webhooks",
            "/dashboard",
            "/projects",
            "/issues",
            "/measures",
            "/coding_rules",
            "/profiles",
            "/quality_gates",
            "/web_api",
            "/about"
          ],
          "UndesirableEndpoints": [
            "/conf/",
            "/logs/",
            "/data/",
            "/extensions/",
            "/lib/",
            "/web/",
            "/elasticsearch/",
            "/temp/",
            "/sonar.properties",
            "/sonar-scanner.properties",
            "/sonar-project.properties",
            "/wrapper.conf",
            "/.sonar/",
            "/sonar-scanner-debug.log",
            "/sq-process.pid",
            "/sq-process.port",
            "/.scannerwork/",
            "/report-task.txt",
            "/analysis-report.json",
            "/scanner-report/",
            "/.sonarqube/",
            "/sonar-auth.properties",
            "/sonar.auth.jwt.secret",
            "/sonarqube.log",
            "/access.log",
            "/web.log",
            "/ce.log",
            "/es.log"
          ]
        }
      ]
    },
    {
      "Port": 4444,
      "Protocol": "HTTP",
      "PotentialServices": [
        {
          "Service": "Selenium Grid",
          "DefaultEndpoints": ["/"],
          "CommonEndpoints": [
            "/wd/hub",
            "/grid/console",
            "/grid/register",
            "/grid/api/proxy",
            "/grid/api/hub",
            "/grid/api/testsession",
            "/grid/resources",
            "/lifecycle-manager",
            "/status",
            "/ui",
            "/graphql",
            "/router",
            "/sessions",
            "/slot/reserve",
            "/slot/release",
            "/se/grid",
            "/assets",
            "/browserslots",
            "/graphql/playground",
            "/grid/admin/LiveView",
            "/grid/admin/SessionManager",
            "/grid/admin/DetailedView",
            "/grid/admin/configuration"
          ],
          "UndesirableEndpoints": [
            "/grid.properties",
            "/grid.json",
            "/grid.yml",
            "/grid.yaml",
            "/config.json",
            "/nodeconfig.json",
            "/selenium.log",
            "/logs/",
            "/config/",
            "/data/",
            "/tmp/",
            "/.selenium/",
            "/hub.log",
            "/node.log",
            "/selenium-server.log",
            "/selenium-node.log",
            "/selenium-hub.log",
            "/geckodriver.log",
            "/chromedriver.log",
            "/IEDriverServer.log",
            "/hub.conf",
            "/node.conf",
            "/selenium.conf",
            "/grid-config.yaml",
            "/grid-router.yaml",
            "/certificates/",
            "/browser-capabilities.json",
            "/user-extensions.js",
            "/custom-firefox-profile/"
          ]
        }
      ]
    },
    {
      "Port": 28017,
      "Protocol": "HTTP",
      "PotentialServices": [
        {
          "Service": "MongoDB REST Interface",
          "DefaultEndpoints": ["/"],
          "CommonEndpoints": [
            "/listDatabases",
            "/serverStatus",
            "/replSetGetStatus",
            "/stats",
            "/isMaster",
            "/databases",
            "/collections",
            "/admin",
            "/local",
            "/config",
            "/test",
            "/system.indexes",
            "/system.users",
            "/system.profile",
            "/system.namespaces"
          ],
          "UndesirableEndpoints": [
            "/mongod.conf",
            "/mongodb.key",
            "/mongodb.crt",
            "/mongodb.pem",
            "/mongodb.log",
            "/mongod.lock",
            "/mongod.pid",
            "/mongodb.pid",
            "/mongodb.log.rotated",
            "/mongodb-audit.log",
            "/mongodb-diagnostic.log",
            "/mongodb-metrics.log",
            "/mongodb-query.log",
            "/mongodb-slow.log",
            "/mongodb-stats.log",
            "/mongodb-trace.log",
            "/mongodb-wt.log",
            "/mongodb-wt-compact.log",
            "/mongodb-wt-verify.log",
            "/mongodb-wt-recover.log",
            "/mongodb-wt-rollback.log",
            "/mongodb-wt-snapshot.log",
            "/mongodb-wt-stat.log",
            "/mongodb-wt-transaction.log",
            "/mongodb-wt-write.log",
            "/mongodb-wt-yield.log",
            "/mongodb-wt-checkpoint.log",
            "/mongodb-wt-compression.log",
            "/mongodb-wt-cursor.log",
            "/mongodb-wt-eviction.log",
            "/mongodb-wt-file.log",
            "/mongodb-wt-log.log",
            "/mongodb-wt-page.log",
            "/mongodb-wt-query.log",
            "/mongodb-wt-read.log",
            "/mongodb-wt-recovery.log",
            "/mongodb-wt-session.log",
            "/mongodb-wt-snapshot.log",
            "/mongodb-wt-stat.log",
            "/mongodb-wt-transaction.log",
            "/mongodb-wt-write.log",
            "/mongodb-wt-yield.log",
            "/mongodb-wt-checkpoint.log",
            "/mongodb-wt-compression.log",
            "/mongodb-wt-cursor.log",
            "/mongodb-wt-eviction.log",
            "/mongodb-wt-file.log",
            "/mongodb-wt-log.log",
            "/mongodb-wt-page.log",
            "/mongodb-wt-query.log",
            "/mongodb-wt-read.log",
            "/mongodb-wt-recovery.log",
            "/mongodb-wt-session.log",
            "/mongodb-wt-snapshot.log",
            "/mongodb-wt-stat.log",
            "/mongodb-wt-transaction.log",
            "/mongodb-wt-write.log",
            "/mongodb-wt-yield.log"
          ]
        }
      ]
    }
  ]
}
